import{__decorate as e}from"tslib";import{html as t}from"lit";import{FormBaseElement as s}from"../base/form-base-element.js";import{property as i,state as h}from"lit/decorators.js";import c from"@inera/ids-design/components/form/checkbox/checkbox-lit";class o extends s{constructor(){super(...arguments),this.valid="true",this.nolabel=!1,this.isChecked=!1,this.isFocused=!1,this.updateIsChecked=()=>{this.isChecked=this.input?.checked},this.clickOnCheckbox=()=>{this.input?.click(),this.updateIsChecked()},this.focusCheckbox=()=>{this.isFocused=!0},this.blurCheckbox=()=>{this.isFocused=!1},this.handleKeyDown=e=>{this.dispatchEvent(new Event("keydown",e))}}disconnectedCallback(){this.input?.removeEventListener("blur",this.focusCheckbox),this.input?.removeEventListener("focus",this.focusCheckbox),this.input?.removeEventListener("keydown",this.handleKeyDown),this.input?.removeEventListener("change",this.updateIsChecked),super.disconnectedCallback()}firstUpdated(e){super.firstUpdated(e),this.isChecked=this.input?.checked||!1,this.input?.addEventListener("blur",this.blurCheckbox),this.input?.addEventListener("focus",this.focusCheckbox),this.input?.addEventListener("keydown",this.handleKeyDown),this.input?.addEventListener("change",this.updateIsChecked),null!==this.input?.getAttribute("disabled")&&this.shadowRoot.querySelector(".ids-checkbox__input")?.classList.add("ids-checkbox__input--disabled"),this.detectChangesOutsideEvents()}detectChangesOutsideEvents(){new MutationObserver((e=>{e.forEach((e=>{"attributes"===e.type&&this.updateIsChecked()}))})).observe(this.input,{attributes:!0})}renderCheckbox(){return this.isChecked&&"false"===this.valid?t`<ids-icon-check color="var(--checkbox-invalid-icon_color)" height="11" width="16"></ids-icon-check>`:this.isChecked?t`<ids-icon-check height="11" width="16"></ids-icon-check>`:t``}getCheckboxClasses(){let e="";return e+=this.isChecked?"ids-checkbox-wrapper--checked":"",e+=this.isFocused?" ids-checkbox-wrapper--focused":"",e+="false"===this.valid?" ids-checkbox-wrapper--invalid":"",e+=this.input?.disabled?" ids-checkbox-wrapper--disabled":"",e+=this.light?" ids-checkbox-wrapper--light":"",e+=this.nolabel?" ids-checkbox-wrapper--no-label":"",e}render(){return t`<div class="ids-checkbox-wrapper ${this.getCheckboxClasses()}"><slot></slot></div><slot name="error-msg"></slot>`}}o.styles=[c],e([i({type:String,reflect:!0})],o.prototype,"valid",void 0),e([i({type:Boolean,reflect:!0})],o.prototype,"nolabel",void 0),e([h()],o.prototype,"isChecked",void 0),e([h()],o.prototype,"isFocused",void 0);export{o as IDSCheckbox};
