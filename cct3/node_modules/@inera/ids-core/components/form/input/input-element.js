import{__decorate as t}from"tslib";import{html as e}from"lit";import{FormBaseElement as i}from"../base/form-base-element.js";import{property as s,state as r}from"lit/decorators.js";import o from"@inera/ids-design/components/form/input/input-lit";class n extends i{constructor(){super(...arguments),this.valid="true",this.renderCloseIcon=!1,this.hasIcon=!1}firstUpdated(t){if(super.firstUpdated(t),"search"===this.inputField?.getAttribute("type"))this.querySelector("ids-button")?.setAttribute("search","true");else{const t=this.querySelector(".ids-icon");t&&(this.hasIcon=!0,t.setAttribute("slot","append-icon"))}}renderSearchIcon(){return"search"===this.inputField?.getAttribute("type")?e`<ids-icon-search width="30" height="30" class="ids-input__prepend-icon"></ids-icon-search>`:null}render(){return e`<div class="ids-input-component-wrapper"><slot name="label"></slot><div class="ids-input-wrapper ${this.light?"ids-input-wrapper--light":""} ${"false"===this.valid?"ids-input-wrapper--invalid":""}"><slot></slot><slot name="append-icon"></slot>${this.renderSearchIcon()}<slot name="button"></slot></div>${this.renderHint()}</div><slot name="error-msg"></slot>`}}n.styles=[o],t([s({type:String,reflect:!0})],n.prototype,"valid",void 0),t([r()],n.prototype,"renderCloseIcon",void 0),t([r()],n.prototype,"hasIcon",void 0);export{n as IDSInput};
